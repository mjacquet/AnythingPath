<!--current package URL https://login.salesforce.com/packaging/installPackage.apexp?p0=04t15000000Nx36 -->

<aura:component implements="flexipage:availableForAllPageTypes,force:hasRecordId,force:hasSObjectName" controller="AnythingPath">

    <ltng:require styles="/resource/slds0121/assets/styles/salesforce-lightning-design-system.css"/>

    <!--internal attributes-->
    <aura:attribute name="recordId" type="Id"/>
    <aura:attribute name="sObjectName" type="string"/>

    <!--design attributes, for the app/community builders-->
    <aura:attribute name="pathField" type="string" required="true" default="Status"/>
    <aura:attribute name="clickToChange" type="boolean" required="true" default="false"/>
    <aura:attribute name="listenForChange" type="boolean" required="true" default="false"/>

    <!--change handlers-->
    <aura:handler name="init" value="{!this}" action="{!c.doInit}"/>

    <!--event handling-->
    <aura:handler event="c:StreamerEvent" action="{!c.listener}"/>

    <!--throwing  an event with current status at init and when status changes-->
   <aura:registerEvent name="APstatusChange" type="c:APstatusChange"/>

    <div class="slds-tabs--path slds-p-around--small" role="application tablist">
        <ul class="slds-tabs--path__nav" role="presentation">
            <aura:iteration items="{!v.pathObjects}" var="step">
                <li class="{!'slds-tabs--path__item slds-' + step.statusClass}" role="presentation">
                    <a class="slds-tabs--path__link" aria-selected="{!step.ariaSelected}" tabindex="{!step.tabIndex}" role="tab" aria-live="assertive"  >
                        <c:ShanesvgIcon containerClass="slds-tabs--path__stage" svgPath="/resource/slds0121/assets/icons/utility-sprite/svg/symbols.svg#check" category="utility" size="x-small" name="check">
                            <span class="slds-assistive-text">Stage Complete</span>
                        </c:ShanesvgIcon>
                        <span class="slds-tabs--path__title" title="{!step.value}" onclick="{!c.handleClick}">{!step.label}</span>
                    </a>
                </li>
            </aura:iteration>
        </ul>
    </div>

    {!v.body}
</aura:component>
